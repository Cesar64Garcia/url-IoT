<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Venganza - Dashboard ", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>

    <!--Reference the canvas js-->
    <script src="~/Scripts/Chart.min.js"></script>

    <script>
        var ctx_tempeture = document.getElementById('temptureChart').getContext('2d');
        var ctx_humidity = document.getElementById('humidityChart').getContext('2d');
        var ctx_pressure = document.getElementById('pressureChart').getContext('2d');
        var ctx_light = document.getElementById('lightChart').getContext('2d');

        var tempetureChart = new Chart(ctx_tempeture, {
            // The type of chart we want to create
            type: 'bar',

            // The data for our dataset
            data: {
                labels: ["January", "February", "March", "April", "May", "June", "July"],
                datasets: [{
                    label: "Tempeture C.",
                    backgroundColor: 'rgb(255, 20, 20)',
                    borderColor: 'rgb(255, 20, 20)',
                    data: [0, 10, 5, 2, 20, 30, 45],
                }, {
                    label: "Tempeture F.",
                    backgroundColor: 'rgb(196, 7, 7)',
                    borderColor: 'rgb(196, 7, 7)',
                    data: [0, 10, 5, 2, 20, 30, 45],
                }]
            },

            // Configuration options go here
            options: {}
        });

        var humidityChart = new Chart(ctx_humidity, {
            // The type of chart we want to create
            type: 'line',

            // The data for our dataset
            data: {
                labels: ["January", "February", "March", "April", "May", "June", "July"],
                datasets: [{
                    label: "Humidity",
                    backgroundColor: 'rgba(15, 167, 255, .6)',
                    borderColor: 'rgb(15, 167, 255)',
                    data: [0, 10, 5, 2, 20, 30, 45],
                }]
            },

            // Configuration options go here
            options: {}
        });

        var pressureChart = new Chart(ctx_pressure, {
            // The type of chart we want to create
            type: 'line',

            // The data for our dataset
            data: {
                labels: ["January", "February", "March", "April", "May", "June", "July"],
                datasets: [{
                    label: "Pressure",
                    backgroundColor: 'rgba(141, 0, 188, .6 )',
                    borderColor: 'rgb(141, 0, 188)',
                    data: [0, 10, 5, 2, 20, 30, 45],
                    fill: 'top'
                }]
            },

            // Configuration options go here
            options: {
                elements: {
                    line: {
                        tension: 0.000001
                    }
                },
                plugins: {
                    filler: {
                        propagate: true
                    }
                }
            }
        });

        var lightChart = new Chart(ctx_light, {
            // The type of chart we want to create
            type: 'line',

            // The data for our dataset
            data: {
                labels: ["January", "February", "March", "April", "May", "June", "July"],
                datasets: [{
                    label: "Light",
                    backgroundColor: 'rgb(255, 205, 79)',
                    borderColor: 'rgb(255, 205, 79)',
                    data: [0, 10, 5, 2, 20, 30, 45],
                    pointStyle: 'star',
                    pointRadius: 10,
                    showLine: false,
                    fill: false
                }]
            },

            // Configuration options go here
            options: {}
        });
    </script>

    <script>
        $.connection.hub.start()
            .done( function () {
                console.log("Successful connection")
            });

        //The generated client-side hub proxy
        var weatherHub = $.connection.weather;

        //Client side method that the server will call
        weatherHub.client.update = function (tmpC, tmpF, humidity, pressure, light, dem) {
            alert(dem);
            var d = new Date();
            var h = d.getHours() > 10 ? d.getHours() : "0" + d.getHours();
            var m = d.getMinutes() > 10 ? d.getMinutes() : "0" + d.getMinutes();
            var s = d.getSeconds() > 10 ? d.getSeconds() : "0" + d.getSeconds();
            var time = h + ":" + m + ":" + s; 

            updateChart(humidityChart, time, [humidity]);
            updateChart(pressureChart, time, [pressure]);
            updateChart(lightChart, time, [light]);
            updateChart(tempetureChart, time, [tmpC, tmpF]);
        }

        function updateChart(chart, label, data) {
            var i = 0;
            chart.data.labels.push(label);
            chart.data.datasets.forEach((dataset) => {
                dataset.data.push(data[i]);
                i++;
            });
            chart.update();
        }
    </script>

    
</body>
</html>
